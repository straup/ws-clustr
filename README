Start here:

	http://code.flickr.com/blog/2009/04/07/the-only-question-left-is/
	http://github.com/straup/py-wsclustr/tree/master

--

ws-clustr

ws-clustr is a bare-bones web interface, written in PHP, to the command-line
Clustr application.

How does it work?

To generate a shapefile using ws-clustr simply send a binary (HTTP) POST
containing the points you want to clustrize. ws-clustr will send back a
compressed shapefile! For example:

$> curl --data-binary '@/path/to/points.txt' http://example.com/ws-clustr/ >
~/path/to/clustr.tar.gz

Details

The file you pass should be formatted as <tag> <lon> <lat> , where tag is any
unique string.

You may also pass the following HTTP headers with your request:

    * x-clustr-alpha.Specify the size of the alpha number to run Clustr
      with. The default value is 0.01

    * x-clustr-name. Specify the name of the output file to create. Valid names
      may only contain the characters a-z (case-insensitive), 0-9 and
      dashes. The default value is clustr-the current process ID

    * x-clustr-cache. Use this header to ask ws-clustr to look for, and use, a
      previously cached version of the points file you want to clustr (rather than
      sending the whole thing to the server again and again). The value should be:
      "clustr-" + the value of md5sum(/path/to/points.txt). If the cache file is not
      found on the server ws-clustr will return an HTTP 404 error. It is left to
      client applications to decide what to do in those circumstances. (It is also
      left to people running a ws-clustr to periodically clean out their system's tmp
      directory where the cache files are stored.)

That's it.

There are no ponies. No.
